; Generated by holtek-gcc v3.19, Wed Sep 06 23:59:07 2023
; 
; Configuration:
;       without long instruction
;       Single ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [1]
acc equ [5]
bp equ [4]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
intc equ [11]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @HCCINIT, @HCCINIT0

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
public __delay_us
#pragma debug scope 2 1
#line 6 "C:\Users\mediv\Nhap\demo\LCD.c"
__delay_us .section 'code'
__delay_us proc
public __delay_us_2
    local __delay_us_2 db 4 dup(?)	; 4,0
#pragma debug variable 14 2 __delay_us_2+0 "time"
#line 8 "C:\Users\mediv\Nhap\demo\LCD.c"
	jmp _L2
_L3:
#line 10 "C:\Users\mediv\Nhap\demo\LCD.c"
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF 2>263690
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	ERRMESSAGE 'the value 2of the argument exceeds the maxinum 263690'
	ENDIF
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF 2<0
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	ERRMESSAGE 'the value 2 of the argument exceeds the mininum 0'
	ENDIF
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF 2==0
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	JMP $
	ENDIF
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF 2==1
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	NOP
	ENDIF
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF 2==2
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	NOP
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	NOP
	ENDIF
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF 2==3
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	NOP
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	NOP
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	NOP
	ENDIF
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF (2<8) AND (2>3)
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	CALL __DELAY3 + 7 -2
	ENDIF
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF (2< 0404h) AND (2>7)
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV A,2/4-1
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	CALL __DELAYX3 + 3 -(2 MOD 4)
	ENDIF
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF (2< 0x40B) AND (2> 0403h)
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV A,0 
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	CALL __DELAYX6 + 0x40a -2
	ENDIF
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF (2 >= 0x40b) AND ((((2-9)%0402h)/4+1)>256)
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV A,(2-9)/0402h
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV _builtin_holtek_delay_2,A
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV A,0
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	CALL __DELAYY5 +5- (((2-9)%0402h)%6)
	ENDIF
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF (2 >= 0x40b) AND ((((2-9)%0402h)/4+1)<=256)
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV A,(2-9)/0402h
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV _builtin_holtek_delay_2,A
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV A,((2-9)%0402h)/4+1
;# 10 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	CALL __DELAYY3 +3-(((2-9)%0402h)%4)
	ENDIF
#line 8 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,255
	addm a,__delay_us_2[0]
	adcm a,__delay_us_2[1]
	adcm a,__delay_us_2[2]
	adcm a,__delay_us_2[3]
_L2:
	mov a,__delay_us_2[0]
	or a,__delay_us_2[1]
	or a,__delay_us_2[2]
	or a,__delay_us_2[3]
	snz z
	jmp _L3
	ret
__delay_us endp
#line 8 "C:\Users\mediv\Nhap\demo\LCD.c"
#pragma debug scope 1 1
public __delay_ms
#pragma debug scope 3 1
#line 18 "C:\Users\mediv\Nhap\demo\LCD.c"
__delay_ms .section 'code'
__delay_ms proc
public __delay_ms_2
    local __delay_ms_2 db 4 dup(?)	; 4,0
#pragma debug variable 14 3 __delay_ms_2+0 "time"
#line 19 "C:\Users\mediv\Nhap\demo\LCD.c"
	clr rb
	clr rc
	jmp _L6
_L7:
#line 19 "C:\Users\mediv\Nhap\demo\LCD.c"
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF 2000>263690
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	ERRMESSAGE 'the value 2000of the argument exceeds the maxinum 263690'
	ENDIF
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF 2000<0
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	ERRMESSAGE 'the value 2000 of the argument exceeds the mininum 0'
	ENDIF
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF 2000==0
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	JMP $
	ENDIF
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF 2000==1
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	NOP
	ENDIF
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF 2000==2
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	NOP
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	NOP
	ENDIF
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF 2000==3
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	NOP
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	NOP
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	NOP
	ENDIF
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF (2000<8) AND (2000>3)
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	CALL __DELAY3 + 7 -2000
	ENDIF
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF (2000< 0404h) AND (2000>7)
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV A,2000/4-1
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	CALL __DELAYX3 + 3 -(2000 MOD 4)
	ENDIF
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF (2000< 0x40B) AND (2000> 0403h)
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV A,0 
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	CALL __DELAYX6 + 0x40a -2000
	ENDIF
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF (2000 >= 0x40b) AND ((((2000-9)%0402h)/4+1)>256)
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV A,(2000-9)/0402h
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV _builtin_holtek_delay_2,A
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV A,0
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	CALL __DELAYY5 +5- (((2000-9)%0402h)%6)
	ENDIF
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	IF (2000 >= 0x40b) AND ((((2000-9)%0402h)/4+1)<=256)
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV A,(2000-9)/0402h
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV _builtin_holtek_delay_2,A
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	MOV A,((2000-9)%0402h)/4+1
;# 19 "C:\Users\mediv\Nhap\demo\LCD.c" 1
	CALL __DELAYY3 +3-(((2000-9)%0402h)%4)
	ENDIF
	inc rb
	sz z
	inc rc
_L6:
	mov a,rb
	sub a,__delay_ms_2[0]
	mov a,rc
	sbc a,__delay_ms_2[1]
	clr acc
	sbc a,__delay_ms_2[2]
	clr acc
	sbc a,__delay_ms_2[3]
	snz c
	jmp _L7
	ret
__delay_ms endp
#line 19 "C:\Users\mediv\Nhap\demo\LCD.c"
#pragma debug scope 1 1
___pac equ [21]
___pb equ [37]
___pa equ [20]
public _Check_ACK
#pragma debug scope 4 1
#line 28 "C:\Users\mediv\Nhap\demo\LCD.c"
_Check_ACK .section 'code'
_Check_ACK proc
	set [21].3
#line 29 "C:\Users\mediv\Nhap\demo\LCD.c"
	set [37].6
_L10:
#line 30 "C:\Users\mediv\Nhap\demo\LCD.c"
	sz [20].3
	jmp _L10
#line 31 "C:\Users\mediv\Nhap\demo\LCD.c"
	clr [37].6
	ret
_Check_ACK endp
#line 31 "C:\Users\mediv\Nhap\demo\LCD.c"
#pragma debug scope 1 1
public _lcdsend
#pragma debug scope 5 1
#line 34 "C:\Users\mediv\Nhap\demo\LCD.c"
_lcdsend .section 'code'
_lcdsend proc
public _lcdsend_2
    local _lcdsend_2 db 4 dup(?)	; 1,3
	mov _lcdsend_2[3],a
#pragma debug variable 8 5 _lcdsend_2+3 "fgCD"
#pragma debug variable 8 5 _lcdsend_2+0 "CD"
#pragma debug variable 8 5 _lcdsend_2+2 "tmp"
#pragma debug variable 8 5 _lcdsend_2+1 "i"
#line 35 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,1
	mov _lcdsend_2[1],a
#line 36 "C:\Users\mediv\Nhap\demo\LCD.c"
	call _I2C_Start
#line 37 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,126
	call _Wr_Byte
	call _Check_ACK
#line 38 "C:\Users\mediv\Nhap\demo\LCD.c"
	sz _lcdsend_2[3]
	jmp _LI1
	jmp _L17
_LI1:
#line 38 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,9
	mov ra,a
	jmp _L12
_L17:
	mov a,8
	mov ra,a
_L12:
	mov a,ra
	mov _lcdsend_2[2],a
#line 39 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdsend_2[0]
	and a,240
	mov ra,a
	mov a,ra
	orm a,_lcdsend_2[2]
#line 40 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdsend_2[2]
	and a,49
	mov ra,a
	mov a,ra
	sub a,32
	snz z
	jmp _L13
	mov a,2
	mov _lcdsend_2[1],a
	jmp _L15
_L13:
	mov a,1
	mov _lcdsend_2[1],a
_L15:
#line 41 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdsend_2[1]
	mov ra,a
	deca ra
	mov _lcdsend_2[1],a
	sz ra
	jmp _LI2
	jmp _L18
_LI2:
#line 42 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdsend_2[2]
	mov ra,a
	mov a,ra
	call _Wr_Byte
	call _Check_ACK
#line 43 "C:\Users\mediv\Nhap\demo\LCD.c"
	set _lcdsend_2[2].2
#line 44 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdsend_2[2]
	mov ra,a
	mov a,ra
	call _Wr_Byte
	call _Check_ACK
#line 45 "C:\Users\mediv\Nhap\demo\LCD.c"
	clr _lcdsend_2[2].2
#line 46 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdsend_2[2]
	mov ra,a
	mov a,ra
	call _Wr_Byte
	call _Check_ACK
	jmp _L15
_L18:
#line 48 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,15
	andm a,_lcdsend_2[2]
#line 49 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdsend_2[0]
	mov rb,a
	clr rc
	mov a,4
_LI3:
	clr c
	rlc rb
	rlc rc
	sdz acc
	jmp _LI3
	mov a,rb
	orm a,_lcdsend_2[2]
#line 50 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdsend_2[2]
	mov ra,a
	mov a,ra
	call _Wr_Byte
	call _Check_ACK
#line 51 "C:\Users\mediv\Nhap\demo\LCD.c"
	set _lcdsend_2[2].2
#line 52 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdsend_2[2]
	mov ra,a
	mov a,ra
	call _Wr_Byte
	call _Check_ACK
#line 53 "C:\Users\mediv\Nhap\demo\LCD.c"
	clr _lcdsend_2[2].2
#line 54 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdsend_2[2]
	mov ra,a
	mov a,ra
	call _Wr_Byte
	call _Check_ACK
#line 55 "C:\Users\mediv\Nhap\demo\LCD.c"
	call _I2C_Stop
	ret
_lcdsend endp
#line 55 "C:\Users\mediv\Nhap\demo\LCD.c"
#pragma debug scope 1 1
public _lcdinit
#pragma debug scope 6 1
#line 58 "C:\Users\mediv\Nhap\demo\LCD.c"
_lcdinit .section 'code'
_lcdinit proc
#line 59 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,40
	mov __delay_ms_2[0],a
	clr __delay_ms_2[1]
	clr __delay_ms_2[2]
	clr __delay_ms_2[3]
	call __delay_ms
#line 60 "C:\Users\mediv\Nhap\demo\LCD.c"
	call _I2C_Start
	call _I2C_Stop
#line 61 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,40
	mov _lcdsend_2[0],a
	mov a,0
	call _lcdsend
#line 62 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,15
	mov _lcdsend_2[0],a
	mov a,0
	call _lcdsend
#line 63 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,6
	mov _lcdsend_2[0],a
	mov a,0
	call _lcdsend
#line 64 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,1
	mov _lcdsend_2[0],a
	mov a,0
	call _lcdsend
	mov a,2
	mov __delay_ms_2[0],a
	clr __delay_ms_2[1]
	clr __delay_ms_2[2]
	clr __delay_ms_2[3]
	call __delay_ms
	ret
_lcdinit endp
#line 64 "C:\Users\mediv\Nhap\demo\LCD.c"
#pragma debug scope 1 1
public _lcdcursor
#pragma debug scope 7 1
#line 67 "C:\Users\mediv\Nhap\demo\LCD.c"
_lcdcursor .section 'code'
_lcdcursor proc
public _lcdcursor_2
    local _lcdcursor_2 db 4 dup(?)	; 4,0
#pragma debug variable 11 7 _lcdcursor_2+0 "row"
#pragma debug variable 11 7 _lcdcursor_2+2 "col"
#line 69 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdcursor_2[0]
	or a,_lcdcursor_2[1]
	sz z
	jmp _L22
#line 69 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdcursor_2[0]
	xor a,1
	or a,_lcdcursor_2[1]
	snz z
	jmp _L25
#line 74 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdcursor_2[2]
	add a,192
	mov ra,a
#line 75 "C:\Users\mediv\Nhap\demo\LCD.c"
	jmp _L21
_L22:
#line 71 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdcursor_2[2]
	add a,128
	mov ra,a
#line 72 "C:\Users\mediv\Nhap\demo\LCD.c"
	jmp _L21
_L25:
#line 68 "C:\Users\mediv\Nhap\demo\LCD.c"
	clr ra
_L21:
#line 77 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,ra
	mov _lcdsend_2[0],a
	mov a,0
	call _lcdsend
	ret
_lcdcursor endp
#line 77 "C:\Users\mediv\Nhap\demo\LCD.c"
#pragma debug scope 1 1
public _lcdprint
#pragma debug scope 8 1
#line 80 "C:\Users\mediv\Nhap\demo\LCD.c"
_lcdprint .section 'code'
_lcdprint proc
public _lcdprint_2
    local _lcdprint_2 db 4 dup(?)	; 2,2
#pragma debug pointer 42 7 8
#pragma debug variable 42 8 _lcdprint_2+0 "ptr"
#pragma debug variable 11 8 _lcdprint_2+2 "i"
#line 81 "C:\Users\mediv\Nhap\demo\LCD.c"
	clr _lcdprint_2[2]
	clr _lcdprint_2[3]
#line 82 "C:\Users\mediv\Nhap\demo\LCD.c"
	jmp _L27
_L28:
#line 83 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,ra
	mov _lcdsend_2[0],a
	mov a,1
	call _lcdsend
#line 84 "C:\Users\mediv\Nhap\demo\LCD.c"
	inc _lcdprint_2[2]
	sz z
	inc _lcdprint_2[3]
#line 85 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,40
	mov __delay_us_2[0],a
	clr __delay_us_2[1]
	clr __delay_us_2[2]
	clr __delay_us_2[3]
	call __delay_us
_L27:
#line 82 "C:\Users\mediv\Nhap\demo\LCD.c"
	mov a,_lcdprint_2[2]
	add a,_lcdprint_2[0]
	mov mp,a
	mov a,_lcdprint_2[3]
	adc a,_lcdprint_2[1]
	mov sbp,a
	call _Crom2Prom
	mov ra,a
	sz ra
	jmp _L28
	ret
_lcdprint endp
#line 82 "C:\Users\mediv\Nhap\demo\LCD.c"
#pragma debug scope 1 1
#pragma debug struct_begin 43 "__pa_bits"
#pragma debug field 21 8 0 1 "__pa0" ;0,1
#pragma debug field 21 8 0 1 "__pa1" ;1,1
#pragma debug field 21 8 0 1 "__pa2" ;2,1
#pragma debug field 21 8 0 1 "__pa3" ;3,1
#pragma debug field 21 8 0 1 "__pa4" ;4,1
#pragma debug field 21 8 0 1 "__pa5" ;5,1
#pragma debug field 21 8 0 1 "__pa6" ;6,1
#pragma debug field 21 8 0 1 "__pa7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 44 ""
#pragma debug field 2 43 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 44 1 ___pa "__pa" 1
#pragma debug struct_begin 45 "__pac_bits"
#pragma debug field 21 8 0 1 "__pac0" ;0,1
#pragma debug field 21 8 0 1 "__pac1" ;1,1
#pragma debug field 21 8 0 1 "__pac2" ;2,1
#pragma debug field 21 8 0 1 "__pac3" ;3,1
#pragma debug field 21 8 0 1 "__pac4" ;4,1
#pragma debug field 21 8 0 1 "__pac5" ;5,1
#pragma debug field 21 8 0 1 "__pac6" ;6,1
#pragma debug field 21 8 0 1 "__pac7" ;7,1
#pragma debug struct_end
#pragma debug union_begin 46 ""
#pragma debug field 2 45 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 46 1 ___pac "__pac" 1
#pragma debug struct_begin 47 "__pb_bits"
#pragma debug field 21 8 0 1 "__pb0" ;0,1
#pragma debug field 21 8 0 1 "__pb1" ;1,1
#pragma debug field 21 8 0 1 "__pb2" ;2,1
#pragma debug field 21 8 0 1 "__pb3" ;3,1
#pragma debug field 21 8 0 1 "__pb4" ;4,1
#pragma debug field 21 8 0 1 "__pb5" ;5,1
#pragma debug field 21 8 0 1 "__pb6" ;6,1
#pragma debug field 21 8 0 1 ;7,1
#pragma debug struct_end
#pragma debug union_begin 48 ""
#pragma debug field 2 47 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 48 1 ___pb "__pb" 1
extern _I2C_Start:near
extern _Wr_Byte:near
extern _I2C_Stop:near

; 
; Generated by holtek-gcc v3.19, Wed Sep 06 23:59:07 2023
; Rebuild 718
; end of file
